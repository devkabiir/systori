# Generated by Django 2.0.13 on 2019-07-30 20:10

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import systori.apps.task.gaeb.structure


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company', '0001_initial'),
        ('equipment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField(default=django.utils.timezone.localdate, verbose_name='Day')),
                ('start', models.TimeField(default=datetime.time(7, 0), verbose_name='Start')),
                ('end', models.TimeField(default=datetime.time(16, 0), verbose_name='End')),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-day'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dailyplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_equipment', to='project.DailyPlan')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='equipment.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='JobSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='Site Name')),
                ('address', models.CharField(max_length=512, verbose_name='Address')),
                ('city', models.CharField(max_length=512, verbose_name='City')),
                ('postal_code', models.CharField(max_length=512, verbose_name='Postal Code')),
                ('country', models.CharField(default='Deutschland', max_length=512, verbose_name='Country')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, verbose_name='Project Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Project Description')),
                ('is_template', models.BooleanField(default=False)),
                ('structure', systori.apps.task.gaeb.structure.GAEBStructureField(default='01.01.001', verbose_name='Numbering Structure')),
                ('phase', django_fsm.FSMField(choices=[('prospective', 'Prospective'), ('tendering', 'Tendering'), ('planning', 'Planning'), ('executing', 'Executing'), ('settlement', 'Settlement'), ('warranty', 'Warranty'), ('finished', 'Finished')], default='prospective', max_length=50)),
                ('state', django_fsm.FSMField(choices=[('active', 'Active'), ('paused', 'Paused'), ('disputed', 'Disputed'), ('stopped', 'Stopped')], default='active', max_length=50)),
                ('structure_depth', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_foreman', models.BooleanField(default=False)),
                ('dailyplan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='project.DailyPlan')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='company.Worker')),
            ],
            options={
                'ordering': ['-is_foreman', 'worker__user__first_name'],
            },
        ),
        migrations.AddField(
            model_name='jobsite',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobsites', to='project.Project'),
        ),
        migrations.AddField(
            model_name='dailyplan',
            name='equipment',
            field=models.ManyToManyField(related_name='dailyplans', through='project.EquipmentAssignment', to='equipment.Equipment'),
        ),
        migrations.AddField(
            model_name='dailyplan',
            name='jobsite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dailyplans', to='project.JobSite'),
        ),
    ]
